qiime2/2019.1

cp -r /bucket/.mabuya/MikheyevU/Vienna/analysis_project_larva_adults_run2/Qiime/sequences /flash/MikheyevU/Vienna/larvae_adult_project/larvae

Qiime processing of the two runs from the larvae-adult-microbiome study. Final processing July 2020.

run 1 -> adults -> also some other samples sequenced and larvae as test -> exclude prior analysis
run 2-> larvae

#move sequences to folder
 
cp /work/MikheyevU/Vienna/analysis_project_larva_adults_run2/190621_M02137_0330_000000000-C92WH/Data/Intensities/BaseCalls/*.fastq.gz /work/MikheyevU/Vienna/analysis_project_larva_adults_run2/final_Qiime/sequences

cp /work/MikheyevU/Vienna/analysis_project_larva_adults_run1/raw_reads_run_1/*.fastq.gz /work/MikheyevU/Vienna/analysis_project_larva_adults_run1/final_Qiime/sequences

mv /work/MikheyevU/Vienna/190226_M02137_0309_000000000-C92WD /work/MikheyevU/Vienna/analysis_project_larva_adults_run1

# importing data	
  
 qiime tools import \
  --type 'SampleData[PairedEndSequencesWithQuality]' \
  --input-path sequences \
  --input-format CasavaOneEightSingleLanePerSampleDirFmt \
  --output-path demux-paired-end.qza 
  
  # trim primer
qiime cutadapt trim-paired \
--i-demultiplexed-sequences demux-paired-end.qza \
--p-cores 16 \
--p-front-f CCTACGGGNGGCWGCAG \
--p-front-r GACTACHVGGGTATCTAATCC \
--o-trimmed-sequences demux-paired-end2.qza 
  
  # Prepare the data for visualization
	qiime demux summarize \
	--i-data demux-paired-end2.qza \
	--o-visualization demux-paired-end2
	
#Saved Visualization to: demux-paired-end2.qzv

#Choose read cut-off lengths based on Interactive Quality Plots, 
	which are found in the second tab in by uploading se_demux.qzv in https://view.qiime2.org/	
	
	
	
 #V3-V4 region primers 341F-805R to produce an expected amplicon size of ~460bp then with a 2x300 cycle (600 total) run we have a 600-460=140bp overlap 
 using the setting below, we end up with 80 bp overlap for run 2 and 90 bp overlap for run 1
 
 
 
 #run 1 adults:
 
 #!/bin/bash
#SBATCH --job-name=dada2
#SBATCH --partition=compute
#SBATCH --mem=120G
#SBATCH --cpus-per-task=2
#SBATCH --time=7-0
#SBATCH --mail-user=vienna.kowallik@oist.jp
#SBATCH --mail-type=BEGIN,FAIL,END
#SBATCH --input=none
#SBATCH --output=%j.out
#SBATCH --error=job_%j.err
##SBATCH --array=1-2
module load qiime2/2019.1
qiime dada2 denoise-paired \
--i-demultiplexed-seqs demux-paired-end2.qza \
--p-n-threads 16 \
--p-trunc-len-f 300 \
--p-trunc-len-r 250 \
--p-trim-left-f 19 \
--p-trim-left-r 8 \
--p-max-ee 2.0 \
--p-trunc-q 2 \
--p-chimera-method 'consensus' \
--o-table table.qza \
--o-representative-sequences rep-seqs.qza \
--o-denoising-stats denoising-stats.qza	


 #run 2 larvae:

qiime dada2 denoise-paired \
--i-demultiplexed-seqs demux-paired-end2.qza \
--p-n-threads 16 \
--p-trunc-len-f 285 \
--p-trunc-len-r 255 \
--p-trim-left-f 0 \
--p-trim-left-r 0 \
--p-max-ee 2.0 \
--p-trunc-q 2 \
--p-chimera-method 'consensus' \
--o-table table.qza \
--o-representative-sequences rep-seqs.qza \
--o-denoising-stats denoising-stats.qza	



#visualize the denoising stats by running:

qiime metadata tabulate \
  --m-input-file denoising-stats.qza \
  --o-visualization denoising-stats.qzv
  
  
  
#At this stage, you will have artifacts containing the feature table and corresponding feature sequences. You can generate summaries of those as follows. need metadata file


#if errors about sample names in metadata file, run this command first and check output to correct
qiime feature-table summarize \
  --i-table table.qza \
  --o-visualization table.qzv



qiime feature-table summarize \
  --i-table table.qza \
  --o-visualization table.qzv \
  --m-sample-metadata-file sample-metadata.txt
qiime feature-table tabulate-seqs \
  --i-data rep-seqs.qza \
  --o-visualization rep-seqs.qzv

#Saved Visualization to: table.qzv 
#Saved Visualization to: rep-seqs.qzv


# make phylogenetic tree

qiime phylogeny align-to-tree-mafft-fasttree \
  --i-sequences rep-seqs.qza \
  --o-alignment aligned-rep-seqs.qza \
  --o-masked-alignment masked-aligned-rep-seqs.qza \
  --o-tree unrooted-tree.qza \
  --o-rooted-tree rooted-tree.qza


###taxonomy, download the 99_7_level SILVA fna and taxonomy files from the 132 release

## train classifier

qiime tools import \
  --type FeatureData[Sequence] \
  --input-path silva_132_99_16S.fna \
  --output-path 99_otus.qza

  qiime tools import \
  --type 'FeatureData[Taxonomy]' \
  --input-format HeaderlessTSVTaxonomyFormat \
  --input-path 99_taxonomy_7_levels.txt \
  --output-path 99_7_level_ref-taxonomy.qza
  
  #####extract 
     
  qiime feature-classifier extract-reads \
  --i-sequences 99_otus.qza \
  --p-f-primer CCTACGGGNGGCWGCAG \
  --p-r-primer GACTACHVGGGTATCTAATCC \
  --p-min-length 100 \
  --p-max-length 600 \
  --o-reads 99_ref-seqs.qza
  
  
  ###train the classifier
  qiime feature-classifier fit-classifier-naive-bayes \
  --i-reference-reads 99_ref-seqs.qza \
  --i-reference-taxonomy 99_7_level_ref-taxonomy.qza \
  --o-classifier 99_7_level_classifier.qza
  
  
##### make taxonomic output with this classifier
 
 #!/bin/bash
#SBATCH --job-name=tax
#SBATCH --partition=compute
#SBATCH --mem=120G
#SBATCH --cpus-per-task=2
#SBATCH --time=7-0
#SBATCH --mail-user=vienna.kowallik@oist.jp
#SBATCH --mail-type=BEGIN,FAIL,END
#SBATCH --input=none
#SBATCH --output=%j.out
#SBATCH --error=job_%j.err
##SBATCH --array=1-2
module load qiime2/2019.1
qiime feature-classifier fit-classifier-naive-bayes \
  --i-reference-reads 99_ref-seqs.qza \
  --i-reference-taxonomy 99_7_level_ref-taxonomy.qza \
  --o-classifier 99_7_level_classifier.qza
   qiime feature-classifier classify-sklearn \
	--i-classifier 99_7_level_classifier.qza \
	--i-reads rep-seqs.qza \
	--o-classification 99_7_level_ref-taxonomy.qza
	
	
qiime tools export --input-path table.qza --output-path exported
qiime tools export --input-path 99_7_level_ref-taxonomy.qza --output-path exported
qiime tools export --input-path unrooted-tree.qza --output-path exported
#rename tree in exported folder and export rooted tree, too
qiime tools export --input-path rooted-tree.qza --output-path exported

#Next, we’ll need to modify the exported taxonomy file’s header before using it with BIOM software. Before modifying that file, make a copy:


module load python/3.7.3

cp exported/taxonomy.tsv exported/biom-taxonomy.tsv
	
#Change the first line of biom-taxonomy.tsv (i.e. the header) to this:

	#OTUID	taxonomy	confidence


#Biom convert with taxonomy

cp /flash/MikheyevU/Vienna/larvae_adult_project/larvae/table.qza /flash/MikheyevU/Vienna/larvae_adult_project/larvae/exported
`
cp /work/MikheyevU/Vienna/analysis_project_larva_adults_run1/final_Qiime/table.qza /work/MikheyevU/Vienna/analysis_project_larva_adults_run1/final_Qiime/exported

cp /work/MikheyevU/Vienna/analysis_project_larva_adults_run1/final_Qiime/sample-metadata.txt /work/MikheyevU/Vienna/analysis_project_larva_adults_run1/final_Qiime/exported


core_2019.1.sif biom add-metadata -i feature-table.biom -o table-with-taxonomy.biom --observation-metadata-fp biom-taxonomy.tsv --sc-separated taxonomy

core_2019.1.sif biom convert -i table-with-taxonomy.biom -o table-with-taxonomy.txt --to-tsv --header-key taxonomy

core_2019.1.sif biom convert -i feature-table.biom -o feature_table.txt --to-tsv	
